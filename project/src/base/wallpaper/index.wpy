<style lang="less">
</style>
<template>
  <view class="package-box">
    <view class="main_box">
      <!--规格-->
      <view class="main_counts">
        <!--成品-->
        <view class="count_box">

          <view class="count_item">
            <view class="count_text">铺贴位置</view>
            <!--墙宽-->
            <view class="count_right">
              <view class="count_right_text">
                <view class="count_right_text_input">
                  <view>墙宽</view>
                  <input type="digit" placeholder-class="phcolor" placeholder="墙宽" bindinput="bindBagWidth"
                         value="{{bagWidth}}"/>
                  <view>m</view>
                </view>
              </view>
            </view>
          </view>

          <!--墙高-->
          <view class="count_item">
            <view class="count_text"></view>
            <view class="count_right">
              <view class="count_right_text">
                <view class="count_right_text_input">
                  <view>墙高</view>
                  <input type="digit" placeholder-class="phcolor" placeholder="墙高" bindinput="bindBagHeight"
                         value="{{bagHeight}}"/>
                  <view>m</view>
                </view>
              </view>
            </view>
          </view>

        </view>
        <!--壁纸尺寸-->
        <view class="count_box">

          <view class="count_item">
            <view class="count_text">壁纸尺寸</view>
            <!--宽-->
            <view class="count_right">
              <view class="count_right_text">
                <view class="count_right_text_input">
                  <view>宽</view>
                  <input type="digit"
                         placeholder-class="phcolor"
                         placeholder="宽"
                         bindinput="bindBagWidth"
                         value="{{bagWidth}}"/>
                  <view>m</view>
                </view>
              </view>
            </view>
          </view>

          <!--高-->
          <view class="count_item">
            <view class="count_text"></view>
            <view class="count_right">
              <view class="count_right_text">
                <view class="count_right_text_input">
                  <view>长</view>
                  <input type="digit"
                         placeholder-class="phcolor"
                         placeholder="长"
                         bindinput="bindBagHeight"
                         value="{{bagHeight}}"/>
                  <view>m</view>
                </view>
              </view>
            </view>
          </view>
          <!--素 花-->
          <view class="count_item">
            <view class="count_text"></view>
            <view class="count_right">
              <checkbox-group class="count_group" bindchange="toolChange">
                <label class="count_group" wx:for="{{toothGroups}}" wx:key="{{item.id}}">
                  <checkbox value="{{item.id}}" checked="{{item.checked}}"/>
                  {{item.name}}
                </label>
              </checkbox-group>
            </view>
          </view>
        </view>
      </view>

      <!--配置-->
      <view class="main_select">
        <view class="select_box">
          <checkbox-group class="count_group" bindchange="toolChange">
            <label class="count_group" wx:for="{{toothGroups}}" wx:key="{{item.id}}">
              <checkbox value="{{item.id}}" checked="{{item.checked}}"/>
              {{item.name}}
            </label>
          </checkbox-group>
        </view>

        <!--数量-->
        <view class="select_counts">
          <view class="need_count">所需数量</view>
          <view>
            <i-input-number i-class="number_class" value="{{ bag }}" min="0" max="100" bindchange="changeBag"/>
          </view>
        </view>
      </view>

    </view>

    <!--用料-->
    <view class="main_results">
      <view class="main_results_box">
        <!--<view class="results_box" bindtap="handleShow">-->
          <!--<view class="results_count">-->
            <!--<view class="result_text">布料用量</view>-->
            <!--<view class="counts">{{useLevel}}m</view>-->
          <!--</view>-->


          <!--<view class="results_max">-->
            <!--<view class="result_text">推荐花边</view>-->
            <!--<view class="counts">-->
              <!--<view class="count-text">{{recommendedBagCoreWidth}}m</view>-->
            <!--</view>-->
          <!--</view>-->
        <!--</view>-->
        <view class="results_box">
          <view class="view_total">查看总表</view>
        </view>
        <!--详情-->
        <view class="results_static" hidden="{{hidden}}">
          <view class="results_header">
            <i-row>
              <i-col span="8" i-class="col-class" wx:for="{{detailList3}}" wx:key="id">
                <view class="col-inner">{{item.name}}
                  <text class="col-text">({{item.unit}})</text>
                </view>
              </i-col>
            </i-row>
          </view>
          <view class="results_inner">
            <i-row>
              <i-col span="8" i-class="col-class" wx:for="{{countList3}}" wx:key="id">
                <view class="col-inner">{{item.counts}}</view>
              </i-col>
            </i-row>
          </view>
        </view>

      </view>
    </view>
    <!--按钮-->
    <view class="view_btn">
      <view class="view_btn_box">
        <!--左侧-->
        <view class="view_btn_left">
          <view class="view_btn_left_box">
          <view class="results_count">
            <view class="result_text">用量</view>
            <view class="counts">{{useLevel}}m</view>
          </view>
          </view>

          <!--<view class="results_max">-->
            <!--<view class="result_text">推荐花边</view>-->
            <!--<view class="counts">-->
              <!--<view class="count-text">{{recommendedBagCoreWidth}}m</view>-->
            <!--</view>-->
          <!--</view>-->
        </view>
        <!--右侧-->
        <view class="view_btn_right">
          <view class="btn_right_box">
            <view class="calculator" bindtap="handleClick" hover-class="calculator_hover">
              <view class="right_box_text">计算壁纸</view>
            </view>
          </view>
          <view class="btn_right_box">
             <view class="collection" hover-class="collection_hover">
               <view class="right_box_text">
                 收录数据
               </view>
             </view>
          </view>
        </view>
      </view>
      <!--<i-button bind:click="handleClick" type="primary">计算靠包</i-button>-->
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'

  const { $Toast } = require('../../components/iview/base/index')
  import moduleA from 'module-a' // aliasFields ignore module example
  console.log('moduleA ignored: ', moduleA) // => moduleA ignored: {}
  export default class Package extends wepy.component {
    data = {
      hidden: false,
      fruit: [
        {
          id: 1,
          checked: true,
          name: '窄幅'
        },
        {
          id: 2,
          checked: false,
          name: '定宽'
        },
        {
          id: 3,
          checked: false,
          name: '定高'
        }
      ],
      countList3: [
        {
          id: 0,
          counts: 0
        },
        // {
        //   id: 1,
        //   counts: 0
        // },
        {
          id: 2,
          counts: 0
        },
        {
          id: 3,
          counts: 0
        }
      ],
      detailList3: [
        {
          name: '壁纸',
          unit: '卷'
        },
        // {
        //   name: '牙绳',
        //   unit: 'm'
        // },
        {
          name: '基膜',
          unit: '升'
        },
        {
          name: '胶',
          unit: '升'
        }
      ], // 详情
      checked: false,
      disabled: false,
      bagWidth: '', // 宽
      bagHeight: '', // 高
      bagWChecked: 1, // 窄幅
//      bagHChecked: false, // 窄幅
//      bagCheckedW: false, // 定宽
//      bagCheckedH: false, // 定高
      tooth: true, // 牙绳check
      toothGroups: [
        {
          id: 1,
          checked: true,
          name: '基膜'
        },
        {
          id: 2,
          checked: true,
          name: '胶'
        }
      ],
      lace: true, // 花边
      narrow: 0, // 窄幅
      defaultWidth: 1.4, // 宽幅定值
      flowerWidth: '', // 取花宽
      flowerHeight: '', // 取花高
      toothRope: false, // 牙绳
      colCounts: 6,
      useLevel: 0, // 用量
      resultsLace: '', // 花边
      resultsTooth: '', // 牙绳
      recommendedBagCoreWidth: 0, // 推荐靠包心
      bagCore: '', // 靠包心
      switchValue: false, // 对花
      bag: 1,
      value: 0
    }

    // 获取数据async
    setBagData(obj) {
//      console.log(obj)
      let that = this
      wepy.request({
        method: 'POST',
        header: {
          'content-type': 'application/x-www-form-urlencoded;charset=utf-8'
        },
        url: 'https://www.doudoufuwu.com/mobile/calculator',
        data: obj
      }).then((res) => {
        console.log(res, 'code')
        if (res.statusCode === 200 && res.data.CalculatorResult) {
          that.countList3[0].counts = res.data.CalculatorResult.useLevel // 布料用量
          // that.countList3[1].counts = res.data.CalculatorResult.toothRope // 牙绳
          that.countList3[1].counts = res.data.CalculatorResult.lace // 花边
          that.countList3[2].counts = res.data.CalculatorResult.bagCore // 靠包心
//          that.resultsLace = res.data.CalculatorResult.bagCore
//          that.resultsTooth = res.data.CalculatorResult.toothRope
          that.useLevel = res.data.CalculatorResult.useLevel // 推荐布料
          // that.recommendedBagCoreWidth = res.data.CalculatorResult.recommendedBagCoreWidth // 推荐靠包心
          that.recommendedBagCoreWidth = res.data.CalculatorResult.lace // 推荐花边
          that.bagCore = res.data.CalculatorResult.bagCore
        } else {
          return $Toast({
            content: res.data.msg,
            type: 'error'
          })
        }
        that.$apply() // 回调app
      })
        .catch((err) => {
          console.log(err, 'err')
        })
    }

    methods = {
      handleShow() {
        this.hidden = !this.hidden
      },
      changeBag({ detail }) {
        this.bag = detail.value
      },
      // 靠包
      handleClick() {
        // console.log(this.tooth)
        if (!this.bagWidth) {
          return $Toast({
            content: '请输入成品宽',
            type: 'warning'
          })
        }
        if (!this.bagHeight) {
          return $Toast({
            content: '请输入成品高',
            type: 'warning'
          })
        }
//        if (!this.flowerWidth) {
//          return $Toast({
//            content: '请输入花距宽',
//            type: 'warning'
//          })
//        }
//        if (!this.flowerHeight) {
//          return $Toast({
//            content: '请输入花距高',
//            type: 'warning'
//          })
//        }
        if (!this.defaultWidth) {
          return $Toast({
            content: '请输入布料默认值',
            type: 'warning'
          })
        }
        if (!this.bagWChecked) {
          return $Toast({
            content: '请选择宽或高',
            type: 'warning'
          })
        }
        // if (!this.lace && !this.toothRope) {
        //   return $Toast({
        //     content: '请选择花边',
        //     type: 'warning'
        //   })
        // }
        if (!this.bag) {
          return $Toast({
            content: '请输入数量',
            type: 'warning'
          })
        }
//        this.bag = detail.value
        let obj = {
          type: 2, // 2:靠包
          goodsWidth: this.bagWidth, // 靠包宽
          goodsHight: this.bagHeight, // 靠包高
          clothType: this.bagWChecked, // 1：窄幅 2:宽幅定宽 3:宽幅定高
          clothValue: this.defaultWidth, // 布料固定值
          flowerType: this.switchValue ? 1 : 0, // 0:无对花 1:有对花
          flowerWidth: this.flowerWidth, // 花距宽
          flowerHight: this.flowerHeight, // 花距高
          num: this.bag, // 数量
          lace: this.lace ? 1 : 0, // 花边 0:无 1:有
          toothRope: this.toothRope ? 1 : 0 // 牙绳 0:无 1:有
        }
        this.setBagData(obj)
      },

      handleFruitChange({ detail = {} }) {
        this.current = detail.value
      },
      // 牙绳
      toolChange(e) {
        console.log('value值', e.detail.value)
        const obj = e.detail.value.find((n) => n === '1')
        const obj2 = e.detail.value.find((n) => n === '2')
        this.toothRope = obj
        this.lace = obj2
        console.log(this.toothRope, '牙绳')
        console.log(this.lace, '花边')
      },
      radioChange(e) {
        console.log('radio', e.detail.value)
        this.bagWChecked = e.detail.value
        if (e.detail.value === '3' || e.detail.value === '2') {
          this.defaultWidth = 2.8
        }
        if (e.detail.value === '1') {
          this.defaultWidth = 1.4
        }
      },
      // 对花
      onChange(event) {
//        console.log(event)
        this.switchValue = event.detail.value
      },
      // 输入框
      bindBagWidth(e) {
//        console.log(e.detail.value)
        this.bagWidth = e.detail.value
      },
      bindBagHeight(e) {
//        console.log(e.detail.value)
        this.bagHeight = e.detail.value
      },
      bindDefaultWidth(e) {
//        console.log(e.detail.value)
        this.defaultWidth = e.detail.value
      },
      bindFlowerWidth(e) {
//        console.log(e.detail.value)
        this.flowerWidth = e.detail.value
      },
      bindFlowerHeight(e) {
//        console.log(e.detail.value)
        this.flowerHeight = e.detail.value
      }
    }

    onLoad() {
//      console.log('Package')
    }
  }
</script>
