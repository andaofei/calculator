<style lang="less">
  @import './index/styles/index';
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
  }

  .userinfo-nickname {
    color: #aaa;
  }
</style>
<template>
  <view class="container">
    <view class="wrapper">
        <!--材料单-->
        <block wx:if="{{current === 'document'}}">
            <Materials></Materials>
        </block>

        <!--计算器-->
        <block wx:if="{{current === 'calculator'}}">
            <Calculator></Calculator>
        </block>

        <!--个人中心-->
        <block wx:if="{{current === 'mine'}}">
            <UserCenter></UserCenter>
        </block>
    </view>
      <view class="container-footer">
          <i-tab-bar current="{{ current }}" bindchange="handleChange">
              <i-tab-bar-item key="document" icon="document" current-icon="document_fill" title="材料单"></i-tab-bar-item>
              <i-tab-bar-item key="calculator" icon="mobilephone" current-icon="mobilephone_fill" title="计算器"></i-tab-bar-item>
              <i-tab-bar-item key="mine" icon="mine" current-icon="mine_fill" title="我的"></i-tab-bar-item>
          </i-tab-bar>
      </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Counter from 'counter' // alias example
  import Calculator from '../base/Calculator-view/index'
  import Materials from '../base/Materials-list/index'
  import UserCenter from '../base/User-center/index'
  import testMixin from '../mixins/test'
  const { $Toast } = require('../components/iview/base/index')
  import { INCREMENT, DECREMENT, SET_IMAGES } from '../store/types/counter'
  import { asyncInc } from '../store/actions'

  @connect({
    selectId (state) {
      return state.counter.selectId
    },
    asyncNum (state) {
      return state.counter.asyncNum
    },
    sumNum (state) {
      return state.counter.num + state.counter.asyncNum
    }
  }, {
    INCREMENT,
    DECREMENT,
    asyncInc,
    SET_IMAGES
  })

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '兜兜计算器',
      usingComponents: {
        'i-toast': '/components/iview/toast/index',
        'i-modal': '/components/iview/modal/index',
        'i-input': '/components/iview/input/index',
        'i-tab-bar': '/components/iview/tab-bar/index',
        'i-tab-bar-item': '/components/iview/tab-bar-item/index',
        'i-tabs': '/components/iview/tabs/index',
        'i-tab': '/components/iview/tab/index',
        'i-input-number': '/components/iview/input-number/index',
        'i-row': '/components/iview/row/index',
        'i-col': '/components/iview/col/index',
        'i-card': '/components/iview/card/index',
        'i-radio-group': '/components/iview/radio-group/index',
        'i-radio': '/components/iview/radio/index',
        'i-switch': '/components/iview/switch/index',
        'i-button': '/components/iview/button/index'
      }
    }
    components = {
      counter1: Counter,
      counter2: Counter,
      Calculator: Calculator,
      Materials: Materials,
      UserCenter: UserCenter
    }
    mixins = [testMixin]

    data = {
      current: 'document',
      userInfo: {
        nickName: '加载中...'
      },
      selected: '',
      slectText: '',
      groupList: [
        {
          id: 1,
          name: '窗帘'
        },
        {
          id: 2,
          name: '帘头'
        },
        {
          id: 3,
          name: '靠枕'
        },
        {
          id: 4,
          name: '坐垫'
        },
        {
          id: 5,
          name: '壁纸'
        }
      ],
      isSelect: true,
      visible: false,
      groupValue: '',
      newAdd: false
    }

    computed = {
    }

    methods = {
      // 点击类别
      select(item) {
        this.methods.INCREMENT({id: item.id})
        this.isSelect = true
        this.selected = item.id
        this.slectText = item.name
        this.newAdd = false
        // console.log(item.id)
        let imgUrls = []
        switch (item.id) {
          case 1:
            imgUrls = [
              'https://www.doudoufuwu.com/pic/cl.png',
              'https://www.doudoufuwu.com/pic/cl2.png'
            ]
            this.methods.SET_IMAGES({img: imgUrls})
            break
          case 2:
            imgUrls = [
              'https://www.doudoufuwu.com/pic/pblt.png'
            ]
            this.methods.SET_IMAGES({img: imgUrls})
            break
          case 3:
            imgUrls = [
              'https://www.doudoufuwu.com/pic/kb.png',
              'https://www.doudoufuwu.com/pic/kb1.png'
            ]
            this.methods.SET_IMAGES({img: imgUrls})
            break
          case 4:
            imgUrls = [
              'https://www.doudoufuwu.com/pic/zuodian.png'
            ]
            this.methods.SET_IMAGES({img: imgUrls})
            break
          case 5:
            imgUrls = [
              'https://www.doudoufuwu.com/pic/bizhi.png',
              'https://www.doudoufuwu.com/pic/bizhi.png'
            ]
            this.methods.SET_IMAGES({img: imgUrls})
            break
          default:
            this.imgUrls = []
            break
        }
      },
      handleChange({ detail }) {
        this.current = detail.key
        let imgUrls = []
        imgUrls = [
          'https://www.doudoufuwu.com/pic/cl.png',
          'https://www.doudoufuwu.com/pic/cl2.png'
        ]
        // this.selected = 1
        // this.slectText = '窗帘'
        this.methods.INCREMENT({id: 1})
        this.methods.SET_IMAGES({img: imgUrls})
      },
      // 选择类别
      toHomePage() {
        if (this.slectText) {
          $Toast({
            content: 'loading',
            type: 'loading'
          })
          setTimeout(() => {
            $Toast.hide()
            this.$navigate({url: 'home/index'})
          }, 300)
        } else {
          $Toast({
            content: '请选择或添加类别',
            type: 'warning'
          })
        }
      },

      addNewGruop() {
        this.isSelect = false
        this.selected = -1
        this.newAdd = true
      },

      // 确认添加类别
      handleAdd() {
        this.visible = true
      },

      handleCancel() {
        if (!this.groupValue) {
          return false
        } else {
          $Toast({
            content: '添加成功',
            type: 'success'
          })
          this.visible = false
        }
      },

      handleClose() {
        this.visible = false
      }

      // handleChange(e) {
      //   this.groupValue = e.detail.value
      // }
    }

    events = {}

    onShow() {
      this.selected = parseInt(this.selectId)
    }

    onLoad() {
//      let self = this
//      this.$parent.getUserInfo(function (userInfo) {
//        console.log(userInfo)
//        if (userInfo) {
//          self.userInfo = userInfo
//        }
//        self.normalTitle = '标题已被修改'
//
//        self.setTimeoutTitle = '标题三秒后会被修改'
//        setTimeout(() => {
//          self.setTimeoutTitle = '到三秒了'
//          self.$apply()
//        }, 3000)
//        self.$apply()
//      })
    }
  }
</script>
